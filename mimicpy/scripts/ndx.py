from .script import Script
from ..utils.errors import ScriptError

class Ndx(Script):
    def __init__(self, *groups):
        super().__init__()
        
        for group in groups:
            setattr(self, group, [])
            
        self.col_len = 15
        self.space_len = 6
        
    def __get_indx(self, group):
        indx = getattr(self, group)
        
        if not isinstance(indx, list):
            raise ScriptError(indx)
    
    def __str_one_group(self, group):
        indices = self.__get_indx(group)
        max_len = len(str(max(indices))) + 1
        spaces = self.space_len if max_len <= self.space_len else max_len
        ndx_group = '[ '+group+' ]'
        for i, idx in enumerate(indices):
            if i%self.col_len == 0:
                ndx_group += '\n'
            ndx_group += "{:{}}".format(idx, spaces)
        ndx_group += '\n'
        return ndx_group
            
    def __str__(self):
        ndx = '; Generated by MiMiCPy\n'
        for parameter in self.parameters:
            ndx += self.__str_one_group(parameter) + '\n\n'
        
        return ndx
    
    def rename_group(self, old_group, new_group): # does not maintain order
        self.__orddict__[new_group] = self.__orddict__.pop(old_group)
    
    def from_string(self):
        pass